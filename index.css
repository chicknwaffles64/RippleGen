@import url("constants.css");
@import url("sliders.css");

button{
    font-family: 'DejaVu Sans Mono', 'Liberation Mono', monospace;
    font-weight: bold;
}

#main{
    display: flex;
    flex-flow: column;
    width: 1200px;
    height: 80%;
    padding-left: 4rem;
}
#waveactivity{
    display: flex;
    flex-flow: column;
    width: var(--medium-width) + var(--slidercoverwidth);
    gap: 3rem;
    padding: 2rem;
}
#controlpanel{
    margin-left: 4rem;
    display: flex;
    flex-flow: column;
    width: 50%;
    gap: 30px;
    padding-top: 10px;
    
}
@media (max-width: 1000px)
{
  #waveactivity,
  #controlpanel {
    width: 100%;
  }
}


.container{
    position: relative;
    width: calc(var(--medium-width) + var(--slidercoverwidth) + 2*var(--dotdimensions));
}
.side-by-side {
    width: calc(var(--medium-width)*2);
}
.none {
    display: none !important;
}
.hide {
    visibility: hidden !important;
}
.relative {
    position: relative !important;
}
.unclickable {
    opacity: 40%;
    pointer-events: none;
}

#parameters{
    display: flex;
    gap: 40px;
}


#sim-selector {
    display: flex;
    flex-flow: row;
    gap: 1rem;
    padding-bottom: 1.5rem;
    font-size: 0.9rem;
}
.sim-type{
    padding: 0.5rem;
    width: 9rem;
    border: 0.2rem solid rgb(31, 156, 94);
    text-align: center;
    opacity: 75%;
}
.sim-type:hover{
    opacity: 65%;
    translate: 0rem 0.2rem;
}
.selected{
    font-weight: 700;
    background-color: var(--colour2);
    opacity: 100%;
}
.tube {
    display: flex;
    align-items: center;
    height: var(--tube-height);
    border-left: var(--tube-end);
    overflow: visible;
}
.tube-gap {
    margin-left: calc(var(--dotdimensions)*-2);
}

.draggablecover{
    position: relative;
    width: var(--slidercoverwidth);
    height: inherit;
    margin-left: auto;
    z-index: 2;
    background-color: var(--backgnd);;
    border-left: var(--tube-end);
}

#stringlenwrapper > n {
    left: 0;
    padding-left: 0.5rem;
    font-weight: 600;
    font-size: 0.85rem;
    transform: none;
}
#L {
    top: 55%;
    border-bottom: 0.15rem solid black;
}
#L-lambda {
    bottom: 30%;
}

.axis{
    position: absolute;
    width: calc(var(--medium-width) - 0.1rem);
    margin: var(--medium-padding);
    height: 0.08rem;
    translate: 0.03rem calc((var(--tube-height)/-2) - 0.1rem);
    background-color: rgba(0, 0, 0, 0.5);

    overflow: visible;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}
#axis-extension {
    margin-left: calc(var(--medium-padding) + var(--medium-width) + var(--dotdimensions));
}
#media-boundary {
    position: absolute;
    left: calc(var(--medium-width));
    bottom: 0;
    height: 100%;
    width: 0.4rem;
    background-color: rgba(77, 77, 77, 0.5);
}
n{
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 1.2rem;
    font-size: 0.8rem;
    transition: opacity 0.2s;
}
majmrk , minmrk {
    position: relative;
    width: 0.08rem;
    background-color: rgb(0, 0, 0);
}
majmrk {height: 0.8rem; width: 0.1rem;}
minmrk {height: 0.5rem; margin-bottom: 0.3rem;}

.medium{
    position: absolute;
    width: var(--medium-width);
    height: inherit;

    display: flex;
    align-items: center;
    gap: var(--dotgap);

    padding: var(--medium-padding);
    overflow: visible;
    z-index: 1;
}
#wavemedium-reflected {
    z-index: 0;
}

dot, dot2, dotsum {
    position: relative;
    flex: 0 0 auto;
    width: var(--dotdimensions);
    height: var(--dotdimensions);
}
dot {background-color: var(--wave1colour)}
dot2 {background-color: var(--wave2colour);}
dotsum {background-color: var(--resultantwavecolour);}

.outer-control, .spec-control {
    display: flex;
    flex-flow: column;
    gap: 1rem;
    padding: 0.5rem;
    height: 12rem;
    
    font-size: 0.9em;
    font-weight: bold;
    border: 0.2rem solid var(--colour1);
    justify-content: flex-end;
}
.outer-control > label, parameter > label {
    text-align: center;
    height: 2rem;
}
.control, .spec-control > parameter {
    display: flex;
    gap: 0.6rem;
    align-self: center;
    flex-basis: 70%;
}
.spec-control {
    border: none;
}

parameter{
    display: flex;
    flex-flow: column;
    width: 2.5rem;
    gap: 0.5rem;
    padding: 0.2rem;
    margin-top: -0.5rem;
    align-items: center;
}
.spec-control > parameter {
    width: fit-content;
    min-width: 5rem !important;
}

.number-input{
    width: 2.5rem;
    text-align: right;
    font-family: 'DejaVu Sans Mono', 'Liberation Mono', monospace;
    font-weight: bold;
}
.parameter-option{
    display: flex;
    flex-flow: row;
    width: 100%;
    padding: 0.3rem;

    align-items: center;
}

#medium-properties > .control{
    width: 15rem;
}
.parameter-option.buttons{
    justify-content: space-around;
}
.option-text{
    flex-grow: 1;
}
.parameter-option-text{
    text-wrap: wrap;
    flex-basis: 80%;
}

.parameter-option.text-buttons{
    display: flex;
    gap: 0.2rem;
    justify-content: space-evenly;
    flex-basis: 80%;
}
.parameter-butt{
    border: 0.15rem solid var(--colour1);
    text-align: center;
    padding: 0.1rem;
    width: 100%;
    min-width: 2rem;
    max-width: 7rem;
    font-size: 0.86rem;
}

